{
  "stats": {
    "suites": 7,
    "tests": 18,
    "passes": 5,
    "pending": 0,
    "failures": 13,
    "start": "2022-10-18T03:06:49.775Z",
    "end": "2022-10-18T03:07:59.304Z",
    "duration": 69529,
    "testsRegistered": 18,
    "passPercent": 27.77777777777778,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9eec2301-4bcd-495d-80ad-62fd7f0c1b07",
      "title": "",
      "fullFile": "cypress\\e2e\\public.cy.js",
      "file": "cypress\\e2e\\public.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eab81cb1-5017-44aa-9be0-3d19cdd2a7e8",
          "title": "Hack#1 Public Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9eb452a2-c449-4bc3-bb1c-9d16ed23772d",
              "title": "Problem 1",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "1-1 Keyboard-container exists and the third row is correct",
                  "fullTitle": "Hack#1 Public Test Problem 1 1-1 Keyboard-container exists and the third row is correct",
                  "timedOut": null,
                  "duration": 901,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Keyboard-container').should('be.visible');",
                  "err": {},
                  "uuid": "36c57daf-0494-442d-bc9d-254387b0ea29",
                  "parentUUID": "9eb452a2-c449-4bc3-bb1c-9d16ed23772d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "1-2-1 Keyboard-container first row correct",
                  "fullTitle": "Hack#1 Public Test Problem 1 1-2-1 Keyboard-container first row correct",
                  "timedOut": null,
                  "duration": 378,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const chars = 'q w e r t y u i o p'.split(' ');\ncy.get('.Keyboard-container > #KBrow_1').should('have.class', 'Keyboard-row').children().should('have.length', 10);\ncy.get('.Keyboard-container > #KBrow_1').children().each(($el, index) => {\n  cy.wrap($el).should('have.text', chars[index]).should('have.id', 'char_' + chars[index]);\n});",
                  "err": {},
                  "uuid": "5ecbe2a3-6317-4532-ac7d-187e2326e933",
                  "parentUUID": "9eb452a2-c449-4bc3-bb1c-9d16ed23772d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "1-2-2 Keyboard-container second row correct",
                  "fullTitle": "Hack#1 Public Test Problem 1 1-2-2 Keyboard-container second row correct",
                  "timedOut": null,
                  "duration": 370,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "const chars = 'a s d f g h j k l'.split(' ');\ncy.get('.Keyboard-container > #KBrow_2').should('have.class', 'Keyboard-row').children().should('have.length', 9);\ncy.get('.Keyboard-container > #KBrow_2').children().each(($el, index) => {\n  cy.wrap($el).should('have.text', chars[index]).should('have.id', 'char_' + chars[index]);\n});",
                  "err": {},
                  "uuid": "80b4e414-31c4-42db-a695-04f304d93ca8",
                  "parentUUID": "9eb452a2-c449-4bc3-bb1c-9d16ed23772d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "36c57daf-0494-442d-bc9d-254387b0ea29",
                "5ecbe2a3-6317-4532-ac7d-187e2326e933",
                "80b4e414-31c4-42db-a695-04f304d93ca8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1649,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "d17a1ec6-606c-4160-b845-3d96c7c68fdf",
              "title": "Problem 2",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "2-1 Board-container exists",
                  "fullTitle": "Hack#1 Public Test Problem 2 2-1 Board-container exists",
                  "timedOut": null,
                  "duration": 157,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Board-container').should('be.visible');",
                  "err": {},
                  "uuid": "9b28e339-09a7-4a9f-aaae-f9747bc29d70",
                  "parentUUID": "d17a1ec6-606c-4160-b845-3d96c7c68fdf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "2-2-1 There are six Row-containers",
                  "fullTitle": "Hack#1 Public Test Problem 2 2-2-1 There are six Row-containers",
                  "timedOut": null,
                  "duration": 208,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Board-container > .Row-container').should('have.length', 6);",
                  "err": {},
                  "uuid": "f61b02eb-d3db-42ad-9381-df4e430ad3fe",
                  "parentUUID": "d17a1ec6-606c-4160-b845-3d96c7c68fdf",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "2-2-2 CurRow is at the first row",
                  "fullTitle": "Hack#1 Public Test Problem 2 2-2-2 CurRow is at the first row",
                  "timedOut": null,
                  "duration": 4228,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Board-container > .Row-container').children().eq(0).should('have.class', 'current');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div.Row-wrapper>' to have class 'current'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div.Row-wrapper>' to have class 'current'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:59:13)",
                    "diff": null
                  },
                  "uuid": "db914b19-109c-4698-9dba-d0990d01bf12",
                  "parentUUID": "d17a1ec6-606c-4160-b845-3d96c7c68fdf",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9b28e339-09a7-4a9f-aaae-f9747bc29d70",
                "f61b02eb-d3db-42ad-9381-df4e430ad3fe"
              ],
              "failures": [
                "db914b19-109c-4698-9dba-d0990d01bf12"
              ],
              "pending": [],
              "skipped": [],
              "duration": 4593,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "de01bffe-64bf-43a8-bd28-c3ddacb442be",
              "title": "Problem 3",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "3-1 curGuess is rendered onto CurRow",
                  "fullTitle": "Hack#1 Public Test Problem 3 3-1 curGuess is rendered onto CurRow",
                  "timedOut": null,
                  "duration": 4266,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('body').type('{a}');\ncy.get('.Row-wrapper.current').children().eq(0).should('have.text', 'a').and('have.id', '0-0');\ncy.get('body').type('{b}').type('{c}').type('{e}');\ncy.get('.Row-wrapper.current').children().eq(1).should('have.text', 'b').and('have.id', '0-1');\ncy.get('.Row-wrapper.current').children().eq(2).should('have.text', 'c').and('have.id', '0-2');\ncy.get('.Row-wrapper.current').children().eq(3).should('have.text', 'e').and('have.id', '0-3');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.Row-wrapper.current`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.Row-wrapper.current`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:66:15)",
                    "diff": null
                  },
                  "uuid": "ff2a6bd5-54a8-4b10-a800-8ef4554c9c09",
                  "parentUUID": "de01bffe-64bf-43a8-bd28-c3ddacb442be",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "3-2 Type more than 5 letters",
                  "fullTitle": "Hack#1 Public Test Problem 3 3-2 Type more than 5 letters",
                  "timedOut": null,
                  "duration": 4799,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['a', 'b', 'c', 'd', 'e', 'f'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Row-wrapper.current').children().each(($el, index) => {\n  cy.wrap($el).should('have.text', test[index]).and('have.id', '0-' + index);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.Row-wrapper.current`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.Row-wrapper.current`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:80:15)",
                    "diff": null
                  },
                  "uuid": "20d613e8-2fee-43b0-a33b-a289f863dd7c",
                  "parentUUID": "de01bffe-64bf-43a8-bd28-c3ddacb442be",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "3-3 Backspace is working",
                  "fullTitle": "Hack#1 Public Test Problem 3 3-3 Backspace is working",
                  "timedOut": null,
                  "duration": 4796,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['z', 'x', 'c', 'v', 'backspace', 'b', 'n'];\nconst ans = ['z', 'x', 'c', 'b', 'n'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Row-wrapper.current').children().each(($el, index) => {\n  cy.wrap($el).should('have.text', ans[index]);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.Row-wrapper.current`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.Row-wrapper.current`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:92:15)",
                    "diff": null
                  },
                  "uuid": "828e5d36-6578-42fe-881c-47edeac92693",
                  "parentUUID": "de01bffe-64bf-43a8-bd28-c3ddacb442be",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "3-4 Filled wordboxes should have class filled",
                  "fullTitle": "Hack#1 Public Test Problem 3 3-4 Filled wordboxes should have class filled",
                  "timedOut": null,
                  "duration": 4190,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.Row-wrapper.current').children().each(($el, index) => {\n  cy.wrap($el).not('have.class', 'filled');\n});\ncy.get('body').type('{z}').type('{x}');\ncy.get('.Row-wrapper.current').children().each(($el, index) => {\n  if (index < 2) {\n    if (index == 0) cy.wrap($el).should('have.text', 'z').and('have.class', 'filled');else if (index == 1) cy.wrap($el).should('have.text', 'x').and('have.class', 'filled');\n  } else {\n    cy.wrap($el).not('have.class', 'filled');\n    cy.wrap($el).should('have.text', '');\n  }\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.Row-wrapper.current`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.Row-wrapper.current`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:99:15)",
                    "diff": null
                  },
                  "uuid": "1d0add19-5560-4768-8e2a-250062b846a2",
                  "parentUUID": "de01bffe-64bf-43a8-bd28-c3ddacb442be",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "ff2a6bd5-54a8-4b10-a800-8ef4554c9c09",
                "20d613e8-2fee-43b0-a33b-a289f863dd7c",
                "828e5d36-6578-42fe-881c-47edeac92693",
                "1d0add19-5560-4768-8e2a-250062b846a2"
              ],
              "pending": [],
              "skipped": [],
              "duration": 18051,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "921e59f2-9094-46a0-b16f-f195ee3d92e9",
              "title": "Problem 4",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "4-1 CurRow change after pressing enter",
                  "fullTitle": "Hack#1 Public Test Problem 4 4-1 CurRow change after pressing enter",
                  "timedOut": null,
                  "duration": 4845,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['a', 'b', 'c', 'd', 'e', 'enter'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Board-container').children().eq(0).get('.Row-wrapper').not('have.class', 'current');\ncy.get('.Board-container').children().eq(1).get('.Row-wrapper').should('have.class', 'current');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '[ <div.Row-wrapper>, 5 more... ]' to have class 'current'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '[ <div.Row-wrapper>, 5 more... ]' to have class 'current'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:136:13)",
                    "diff": null
                  },
                  "uuid": "950dd476-d015-4bdf-97da-b57ce58fef26",
                  "parentUUID": "921e59f2-9094-46a0-b16f-f195ee3d92e9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "4-2 Green rendered correctly (only one line)",
                  "fullTitle": "Hack#1 Public Test Problem 4 4-2 Green rendered correctly (only one line)",
                  "timedOut": null,
                  "duration": 4636,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['m', 'a', 'n', 'a', 's', 'enter'];\nconst answer = ['green', 'grey', 'green', 'grey', 'green'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Board-container > .Row-container > .Row-wrapper').eq(0).children().each(($el, index) => {\n  cy.wrap($el).should('have.class', answer[index]).and('have.text', test[index]);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox>' to have class 'green'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox>' to have class 'green'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:147:29)",
                    "diff": null
                  },
                  "uuid": "c91b7099-f0f5-4149-b321-b3f8809d57b4",
                  "parentUUID": "921e59f2-9094-46a0-b16f-f195ee3d92e9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "4-3 Green and yellow rendered correctly (only one line)",
                  "fullTitle": "Hack#1 Public Test Problem 4 4-3 Green and yellow rendered correctly (only one line)",
                  "timedOut": null,
                  "duration": 4655,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['a', 'i', 'u', 'b', 'm', 'enter'];\nconst answer = ['grey', 'green', 'yellow', 'grey', 'yellow'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Board-container > .Row-container > .Row-wrapper').eq(0).children().each(($el, index) => {\n  cy.wrap($el).should('have.class', answer[index]).and('have.text', test[index]);\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox>' to have class 'grey'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox>' to have class 'grey'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:159:29)",
                    "diff": null
                  },
                  "uuid": "297a42c0-f5fa-409e-aea9-1b6f15eb4e80",
                  "parentUUID": "921e59f2-9094-46a0-b16f-f195ee3d92e9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "4-4 Multiple Lines Test",
                  "fullTitle": "Hack#1 Public Test Problem 4 4-4 Multiple Lines Test",
                  "timedOut": null,
                  "duration": 6539,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const tests = [['z', 'x', 'c', 'v', 'b', 'enter'], ['m', 'a', 'b', 'c', 'u', 'enter'], ['b', 'a', 'n', 'f', 's', 'enter'], ['m', 'u', 'n', 'a', 's', 'enter'], ['m', 'i', 'n', 'u', 's', 'enter']];\nconst answers = [['grey', 'grey', 'grey', 'grey', 'grey'], ['green', 'grey', 'grey', 'grey', 'yellow'], ['grey', 'grey', 'green', 'grey', 'green'], ['green', 'yellow', 'green', 'grey', 'green'], ['green', 'green', 'green', 'green', 'green']];\nfor (let line = 0; line < tests.length; line += 1) {\n  for (let i = 0; i < tests[0].length; i += 1) {\n    cy.get('body').type(`{${tests[line][i]}}`);\n  }\n}\ncy.get('.Board-container').children().each(($el, line) => {\n  if (line < answers.length) {\n    cy.wrap($el).children().eq(0).children().each(($el, i) => {\n      cy.wrap($el).should('have.text', tests[line][i]).should('have.class', answers[line][i]).should('have.id', line + '-' + i);\n    });\n  }\n});",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox>' to have text 'z', but the text was ''",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#0-0.Row-wordbox>' to have text 'z', but the text was ''\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:191:25)",
                    "diff": "+ 'z'\n"
                  },
                  "uuid": "d1cae6fb-2d53-4cf8-83ab-bc1ec95b4f4a",
                  "parentUUID": "921e59f2-9094-46a0-b16f-f195ee3d92e9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "950dd476-d015-4bdf-97da-b57ce58fef26",
                "c91b7099-f0f5-4149-b321-b3f8809d57b4",
                "297a42c0-f5fa-409e-aea9-1b6f15eb4e80",
                "d1cae6fb-2d53-4cf8-83ab-bc1ec95b4f4a"
              ],
              "pending": [],
              "skipped": [],
              "duration": 20675,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "4f3d2127-58dd-4230-8364-446610ea7403",
              "title": "Problem 5",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "5-1 Render green correctly",
                  "fullTitle": "Hack#1 Public Test Problem 5 5-1 Render green correctly",
                  "timedOut": null,
                  "duration": 4644,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const test = ['m', 'a', 'n', 'b', 'c', 'enter'];\nfor (let i = 0; i < test.length; i += 1) {\n  cy.get('body').type(`{${test[i]}}`);\n}\ncy.get('.Keyboard-container > .Keyboard-row > #char_n').should('have.class', 'green').and('have.text', 'n');\ncy.get('.Keyboard-container > .Keyboard-row > #char_m').should('have.class', 'green').and('have.text', 'm');\ncy.get('.Keyboard-container > .Keyboard-row > #char_a').should('have.text', 'a').not('have.class', 'green').not('have.class', 'yellow');\ncy.get('.Keyboard-container > .Keyboard-row > #char_b').should('have.text', 'b').not('have.class', 'green').not('have.class', 'yellow');\ncy.get('.Keyboard-container > .Keyboard-row > #char_c').should('have.text', 'c').not('have.class', 'green').not('have.class', 'yellow');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#char_n.Keyboard-char.undefined>' to have class 'green'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#char_n.Keyboard-char.undefined>' to have class 'green'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:207:68)",
                    "diff": null
                  },
                  "uuid": "8d9598b9-9520-466b-8e18-ff0180344bef",
                  "parentUUID": "4f3d2127-58dd-4230-8364-446610ea7403",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "5-2 Multiple Lines",
                  "fullTitle": "Hack#1 Public Test Problem 5 5-2 Multiple Lines",
                  "timedOut": null,
                  "duration": 5636,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const tests = [['a', 'b', 'c', 'e', 'f', 'enter'], ['n', 'b', 'c', 'e', 'f', 'enter'], ['m', 'n', 'c', 'e', 'f', 'enter'], ['m', 'u', 'n', 'e', 'f', 'enter'], ['m', 'u', 'n', 's', 'i', 'enter'], ['a', 'b', 'c', 'e', 'f', 'enter']]; // key match with \"w i n d y\"\nconst key_match = [['', '', '', '', ''], ['', '', 'yellow', '', ''], ['green', '', 'yellow', '', ''], ['green', '', 'green', 'yellow', ''], ['green', 'yellow', 'green', 'yellow', 'yellow'], ['green', 'yellow', 'green', 'yellow', 'yellow']];\nfor (let line = 0; line < tests.length; line += 1) {\n  for (let i = 0; i < tests[0].length; i += 1) {\n    cy.get('body').type(`{${tests[line][i]}}`);\n  }\n  for (let i = 0; i < KBrow_1.length; i++) {\n    if (!solList.includes(KBrow_1[i])) {\n      cy.get('.Keyboard-container > #KBrow_1 > #char_' + KBrow_1[i]).should('have.text', KBrow_1[i]).not('have.class', 'green').not('have.class', 'yellow');\n    } else {\n      if (key_match[line][solList.indexOf(KBrow_1[i])]) {\n        cy.get('.Keyboard-container > #KBrow_1 > #char_' + KBrow_1[i]).should('have.text', KBrow_1[i]).and('have.class', key_match[line][solList.indexOf(KBrow_1[i])]);\n      } else {\n        cy.get('.Keyboard-container > #KBrow_1 > #char_' + KBrow_1[i]).should('have.text', KBrow_1[i]).not('have.class', 'green').not('have.class', 'yellow');\n      }\n    }\n  }\n  for (let i = 0; i < KBrow_2.length; i++) {\n    if (!solList.includes(KBrow_2[i])) {\n      cy.get('.Keyboard-container > #KBrow_2 > #char_' + KBrow_2[i]).should('have.text', KBrow_2[i]).not('have.class', 'green').not('have.class', 'yellow');\n    } else {\n      if (key_match[line][solList.indexOf(KBrow_2[i])]) {\n        cy.get('.Keyboard-container > #KBrow_2 > #char_' + KBrow_2[i]).should('have.text', KBrow_2[i]).and('have.class', key_match[line][solList.indexOf(KBrow_2[i])]);\n      } else {\n        cy.get('.Keyboard-container > #KBrow_2 > #char_' + KBrow_2[i]).should('have.text', KBrow_2[i]).not('have.class', 'green').not('have.class', 'yellow');\n      }\n    }\n  }\n  for (let i = 0; i < KBrow_3.length; i++) {\n    if (!solList.includes(KBrow_3[i])) {\n      cy.get('.Keyboard-container > #KBrow_3 > #char_' + KBrow_3[i]).should('have.text', KBrow_3[i]).not('have.class', 'green').not('have.class', 'yellow');\n    } else {\n      if (key_match[line][solList.indexOf(KBrow_3[i])]) {\n        cy.get('.Keyboard-container > #KBrow_3 > #char_' + KBrow_3[i]).should('have.text', KBrow_3[i]).and('have.class', key_match[line][solList.indexOf(KBrow_3[i])]);\n      } else {\n        cy.get('.Keyboard-container > #KBrow_3 > #char_' + KBrow_3[i]).should('have.text', KBrow_3[i]).not('have.class', 'green').not('have.class', 'yellow');\n      }\n    }\n  }\n}",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: expected '<div#char_n.Keyboard-char.undefined>' to have class 'yellow'",
                    "estack": "AssertionError: Timed out retrying after 4000ms: expected '<div#char_n.Keyboard-char.undefined>' to have class 'yellow'\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:293:29)",
                    "diff": null
                  },
                  "uuid": "c4cdb14b-52a7-42d8-a67d-4962a47a0a3c",
                  "parentUUID": "4f3d2127-58dd-4230-8364-446610ea7403",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "8d9598b9-9520-466b-8e18-ff0180344bef",
                "c4cdb14b-52a7-42d8-a67d-4962a47a0a3c"
              ],
              "pending": [],
              "skipped": [],
              "duration": 10280,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "e8ee914d-83dd-40b5-9d60-7ea729c40b9f",
              "title": "Problem 6",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "6-1 Show winning info",
                  "fullTitle": "Hack#1 Public Test Problem 6 6-1 Show winning info",
                  "timedOut": null,
                  "duration": 4796,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const tests = [['a', 'b', 'c', 'e', 'f', 'enter'], ['n', 'b', 'c', 'e', 'f', 'enter'], ['m', 'n', 'c', 'e', 'f', 'enter'], ['m', 'u', 'n', 's', 'i', 'enter'], ['m', 'i', 'n', 'u', 's', 'enter']];\nfor (let line = 0; line < tests.length; line += 1) {\n  for (let i = 0; i < tests[0].length; i += 1) {\n    cy.get('body').type(`{${tests[line][i]}}`);\n  }\n  if (line != tests.length - 1) {\n    cy.get('.Wordle-lose').should('have.class', 'Hidden');\n  }\n}\ncy.get('.Wordle-win').should('have.text', 'You win!!!!');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.Wordle-lose`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.Wordle-lose`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:321:43)",
                    "diff": null
                  },
                  "uuid": "fa8deaa3-5df2-478a-8cde-3ec92c3dec72",
                  "parentUUID": "e8ee914d-83dd-40b5-9d60-7ea729c40b9f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "6-2 Show losing info",
                  "fullTitle": "Hack#1 Public Test Problem 6 6-2 Show losing info",
                  "timedOut": null,
                  "duration": 5396,
                  "state": "failed",
                  "speed": null,
                  "pass": false,
                  "fail": true,
                  "pending": false,
                  "context": null,
                  "code": "const tests = [['a', 'b', 'c', 'e', 'f', 'enter'], ['n', 'b', 'c', 'e', 'f', 'enter'], ['m', 'n', 'c', 'e', 'f', 'enter'], ['m', 'u', 'n', 'e', 'f', 'enter'], ['m', 'u', 'n', 's', 'i', 'enter'], ['a', 'b', 'c', 'e', 'f', 'enter']];\nfor (let line = 0; line < tests.length; line += 1) {\n  for (let i = 0; i < tests[0].length; i += 1) {\n    cy.get('body').type(`{${tests[line][i]}}`);\n  }\n  if (line != tests.length - 1) {\n    cy.get('.Wordle-lose').should('have.class', 'Hidden');\n  }\n}\ncy.get('.Wordle-lose').not('have.class', 'Hidden').should('have.text', 'You lose!!!! The answer is ' + solution + '.');",
                  "err": {
                    "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.Wordle-lose`, but never found it.",
                    "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.Wordle-lose`, but never found it.\n    at Context.eval (webpack:///./cypress/e2e/public.cy.js:340:43)",
                    "diff": null
                  },
                  "uuid": "9a716581-27c8-47ed-8bc4-3889adf55fb7",
                  "parentUUID": "e8ee914d-83dd-40b5-9d60-7ea729c40b9f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [],
              "failures": [
                "fa8deaa3-5df2-478a-8cde-3ec92c3dec72",
                "9a716581-27c8-47ed-8bc4-3889adf55fb7"
              ],
              "pending": [],
              "skipped": [],
              "duration": 10192,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results",
        "overwrite": true,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}